{"title":"API接口测试入门","uid":"922a078e310ed087c60322a7fd27c1cb","slug":"2020-1-20-API-test-learning","date":"2020-01-20T12:00:00.000Z","updated":"2021-09-20T11:40:05.890Z","comments":true,"path":"api/articles/2020-1-20-API-test-learning.json","keywords":null,"cover":null,"content":"<h2 id=\"API接口测试入门\"><a href=\"#API接口测试入门\" class=\"headerlink\" title=\"API接口测试入门\"></a>API接口测试入门</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>API是Application Programming Interface的简写，我们又把接口测试叫做API测试，主要用于实现多个系统之间或系统内部模块之间的通信和数据交换的能力。</p></blockquote>\n<h3 id=\"1-接口定义\"><a href=\"#1-接口定义\" class=\"headerlink\" title=\"1.接口定义\"></a>1.接口定义</h3><p>接口测试主要用于系统与系统之间以及内部各个子系统或模块之间的交互点。定义特定的交互点，然后通过这些交互点，以及一些特殊的规则也就是协议，来进行数据之间的交互。前后端之间配合工作，就是其中一方定义实现接口，另一方来调用接口，以实现预期功能。</p>\n<p>举个简单的例子，我们在开车踩油门时，并不需要知道油门内部的零线/火线以及具体的电路结构，因为汽车制造商已经将给油的一系列操作全部封装成了油门这样一个接口，用户只要傻瓜式地进行踩油门的操作就可以让汽车实现加速。</p>\n<h3 id=\"2-接口分类\"><a href=\"#2-接口分类\" class=\"headerlink\" title=\"2.接口分类\"></a>2.接口分类</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>WebService和HTTP</p></blockquote>\n<p>（1）WebService接口走soap协议，请求报文和返回报文都是xml格式，通过SoapUI工具进行测试；</p>\n<p>（2）HTTP API接口走HTTP协议，通过路径来区分调用的方法，请求报文入参有多种形式，返回报文一般为json串，最常见的是get和post方法。</p>\n<h3 id=\"3-接口测试必要性\"><a href=\"#3-接口测试必要性\" class=\"headerlink\" title=\"3.接口测试必要性\"></a>3.接口测试必要性</h3><p>（1）效率上：<br>现在系统的复杂性与日俱增，传统测试方法人工成本过高且效率低下，而接口测试比较容易实现自动化集成，减少人工成本与时间，缩短测试周期；</p>\n<p>（2）安全上：<br>前后端架构分离，只依靠前端进行测试已经完全不能满足系统安全要求，绕过前面实在太容易，需要后端同样进行控制，在这种情况下就需要从接口层面验证。</p>\n<h3 id=\"4-接口测试原理\"><a href=\"#4-接口测试原理\" class=\"headerlink\" title=\"4.接口测试原理\"></a>4.接口测试原理</h3><p>通过程序模拟客户端向服务器发送请求报文，服务器接收请求报文后对报文做处理并向客户端返回应答，客户端再接收应答的一个过程。</p>\n<h3 id=\"5-接口文档关键部分\"><a href=\"#5-接口文档关键部分\" class=\"headerlink\" title=\"5.接口文档关键部分\"></a>5.接口文档关键部分</h3><p>接口说明</p>\n<p>调用的url</p>\n<p>请求方法（get、post）</p>\n<p>请求参数，参数类型、请求参数说明</p>\n<p>返回参数说明</p>\n<p>返回示例</p>\n<h3 id=\"6-接口测试分类\"><a href=\"#6-接口测试分类\" class=\"headerlink\" title=\"6.接口测试分类\"></a>6.接口测试分类</h3><p>（1）功能测试：<br>由于是针对基本业务功能进行测试，这部分是两种测试重合度最高的一块，开发同学通常所指的也主要是这部分的内容。<br>测试覆盖：业务流程，参数类型、可选项等。</p>\n<p>（2）边界分析测试：<br>在基本功能测试的基础上考虑输入输出的边界条件。相对来说接口可以覆盖的范围很广，同样的，接口出现问题的概率也更高。<br>测试覆盖：边界值、特殊字符等。</p>\n<p>（3）性能测试：<br>接口性能主要关注接口响应时间、并发、服务端资源的使用情况等。越靠近底层，对于系统的性能优化越有利。<br>测试覆盖：并发数、吞吐量、tps等</p>\n<h3 id=\"7-接口测试工具\"><a href=\"#7-接口测试工具\" class=\"headerlink\" title=\"7.接口测试工具\"></a>7.接口测试工具</h3><p>Postman，jmeter，soupUI等测试工具。</p>\n<h2 id=\"测试用例基本概念拓展\"><a href=\"#测试用例基本概念拓展\" class=\"headerlink\" title=\"测试用例基本概念拓展\"></a>测试用例基本概念拓展</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>简单来说，测试用例就是一个文档，描述输入、输出、动作、时间等，其目的是确定应用程序的某个特性是否正常工作，并且达到程序所设计的期望结果。</p></blockquote>\n<h3 id=\"测试用例的作用\"><a href=\"#测试用例的作用\" class=\"headerlink\" title=\"测试用例的作用\"></a>测试用例的作用</h3><ul>\n<li>有效性</li>\n</ul>\n<p>避免穷举测试，选取代表性的测试数据进行测试，节省时间和资源，提高测试效率</p>\n<ul>\n<li>避免测试的盲目性</li>\n</ul>\n<p>开始测试之前设计好测试用例，避免盲目测试，使得重点突出、目的明确</p>\n<ul>\n<li>可维护性</li>\n</ul>\n<p>软件版本更新后，只需部分修正测试用例即可继续开展，降低工作强度，缩短项目周期</p>\n<ul>\n<li>可复用性</li>\n</ul>\n<p>项目功能的模块化，使软件易于开发，使得测试过程事半功倍</p>\n<ul>\n<li>可评估性</li>\n</ul>\n<p>程序代码的质量的量化标准应该用测试用例的通过率和测试输出软件缺陷的数目来进行评估</p>\n<ul>\n<li>可管理性</li>\n</ul>\n<p>测试用例是测试人员的重要参考依据，也可以作为检验测试进度、测试工作量的因素，来对测试工作进行有效管理</p>\n<h3 id=\"测试用例的设计\"><a href=\"#测试用例的设计\" class=\"headerlink\" title=\"测试用例的设计\"></a>测试用例的设计</h3><p>通常由经验丰富的测试人员设计测试用例，经验较少的人员从执行测试用例开始进行，随着经验和技术的积累，再逐渐开始参与测试用例的设计工作。</p>\n<h3 id=\"tip1-测试设计说明\"><a href=\"#tip1-测试设计说明\" class=\"headerlink\" title=\"tip1.测试设计说明\"></a>tip1.测试设计说明</h3><p>类似开发人员有项目开发功能书一样，测试人员也要有说明书来指导测试人员如何设计测试用例，包括但不限于：被测特性、测试所用的方法、测试准则等。</p>\n<ul>\n<li><p>标识符</p>\n</li>\n<li><p>被测特性</p>\n</li>\n<li><p>方法</p>\n</li>\n<li><p>测试用例信息</p>\n</li>\n<li><p>通过/失败规则</p>\n</li>\n</ul>\n<h3 id=\"tip2-测试用例编写\"><a href=\"#tip2-测试用例编写\" class=\"headerlink\" title=\"tip2.测试用例编写\"></a>tip2.测试用例编写</h3><ul>\n<li>用例的编号</li>\n</ul>\n<p>由测试引用的唯一标识符，便于查找测试用例，也便于用例的追踪和管理</p>\n<ul>\n<li>测试标题</li>\n</ul>\n<p>对测试用例的描述，清楚表达用例的相关用途等</p>\n<ul>\n<li>测试项</li>\n</ul>\n<p>测试用例应该具体详细的描述所测试项的详细特征，更加详细具体</p>\n<ul>\n<li>测试环境要求</li>\n</ul>\n<p>该测试用例执行的外部条件，软硬件具体指标和测试工具等</p>\n<ul>\n<li>特殊要求</li>\n</ul>\n<p>对环境的特殊需求，如所需设备型号、对防火墙等的特殊设置</p>\n<ul>\n<li>测试输入说明</li>\n</ul>\n<p>提供测试执行中的各种输入条件。根据需求中的输入条件，确定测试用例的输入。</p>\n<ul>\n<li>操作步骤</li>\n</ul>\n<p>提供测试执行的过程步骤，对于复杂的用例，应该分为几个步骤分别完成测试。</p>\n<ul>\n<li>预期结果</li>\n</ul>\n<p>提供测试执行的预期结果，预期结果应该根据软件需求中的输出得出。如实际结果与预期结果不符合，则测试不通过。</p>\n<ul>\n<li>测试用例之间的关联</li>\n</ul>\n<p>用来标示该测试用例和其他测试用例之间的依赖关系。在实际测试中，很多测试用例并不是单独存在的，而是可能存在 某种相互依赖关系。</p>\n<ul>\n<li><p>测试用例设计人员和测试人员</p>\n</li>\n<li><p>测试优先级</p>\n</li>\n</ul>\n<p>一般分为0～4的一共5个等级，通过优先级来标注出软件测试的重点和先后顺序。</p>\n<h3 id=\"测试用例的分类和阶段\"><a href=\"#测试用例的分类和阶段\" class=\"headerlink\" title=\"测试用例的分类和阶段\"></a>测试用例的分类和阶段</h3><table>\n<thead>\n<tr>\n<th>测试阶段</th>\n<th align=\"center\">测试类型</th>\n<th align=\"right\">执行人员</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单元测试</td>\n<td align=\"center\">模块功能测试、部分接口测试、覆盖测试、路径测试</td>\n<td align=\"right\">开发与测试结合</td>\n</tr>\n<tr>\n<td>集成测试</td>\n<td align=\"center\">接口测试、路径测试、部分功能测试</td>\n<td align=\"right\">开发与测试结合或测试</td>\n</tr>\n<tr>\n<td>系统测试</td>\n<td align=\"center\">功能测试、兼容性测试、性能测试、用户界面测试、安全性测试、强度测试、可靠性测试</td>\n<td align=\"right\">测试人员</td>\n</tr>\n<tr>\n<td>验收测试</td>\n<td align=\"center\">对于实际项目基本同上、包含文档测试</td>\n<td align=\"right\">测试人员或包含用户</td>\n</tr>\n</tbody></table>\n","text":"API接口测试入门 API是Application Programming Interface的简写，我们又把接口测试叫做API测试，主要用于实现多个系统之间或系统内部模块之间的通信和数据交换的能力。 1.接口定义接口测试主要用于系统与系统之间以及内部各个子系统或模块之间的交互点...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"Test","slug":"Test","count":4,"path":"api/categories/Test.json"}],"tags":[{"name":"OS","slug":"OS","count":6,"path":"api/tags/OS.json"},{"name":"Test","slug":"Test","count":5,"path":"api/tags/Test.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#API%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%85%A5%E9%97%A8\"><span class=\"toc-text\">API接口测试入门</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%8E%A5%E5%8F%A3%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">1.接口定义</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%8E%A5%E5%8F%A3%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">2.接口分类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%BF%85%E8%A6%81%E6%80%A7\"><span class=\"toc-text\">3.接口测试必要性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">4.接口测试原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3%E5%85%B3%E9%94%AE%E9%83%A8%E5%88%86\"><span class=\"toc-text\">5.接口文档关键部分</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">6.接口测试分类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">7.接口测试工具</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E6%8B%93%E5%B1%95\"><span class=\"toc-text\">测试用例基本概念拓展</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">测试用例的作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E7%9A%84%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">测试用例的设计</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tip1-%E6%B5%8B%E8%AF%95%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">tip1.测试设计说明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tip2-%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E7%BC%96%E5%86%99\"><span class=\"toc-text\">tip2.测试用例编写</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E7%9A%84%E5%88%86%E7%B1%BB%E5%92%8C%E9%98%B6%E6%AE%B5\"><span class=\"toc-text\">测试用例的分类和阶段</span></a></li></ol></li></ol>","author":{"name":"Csuzhang","slug":"blog-author","avatar":"http://csuzhang.info/about/self.png","link":"https://github.com/zhyChesterCheung","description":"A passionate & singlehood backend developer","socials":{"github":"https://github.com/zhyChesterCheung","twitter":"https://twitter.com/ChesterCheung4","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5689093900","zhihu":"https://www.zhihu.com/people/la-la-la-la-la-la-la-ji-9","csdn":"https://blog.csdn.net/weixin_44390145","juejin":"https://juejin.cn/user/1803630845901783","customs":{}}},"mapped":true,"prev_post":{"title":"Shell脚本2小时速学","uid":"faf57fc67eb65f85eddb08e39325fc44","slug":"2020-2-21-shell","date":"2020-02-21T13:00:00.000Z","updated":"2021-09-20T11:40:49.898Z","comments":true,"path":"api/articles/2020-2-21-shell.json","keywords":null,"cover":null,"text":"Shell简介Shell 是一个用 C 语言编写的程序，它是用户使用Linux的桥梁。Shell 既是一种命令语言，又是一种程序设计语言。Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。Ken Thompson 的 sh 是第一种...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"Test","slug":"Test","count":4,"path":"api/categories/Test.json"}],"tags":[{"name":"OS","slug":"OS","count":6,"path":"api/tags/OS.json"},{"name":"Test","slug":"Test","count":5,"path":"api/tags/Test.json"},{"name":"shell","slug":"shell","count":1,"path":"api/tags/shell.json"}],"author":{"name":"Csuzhang","slug":"blog-author","avatar":"http://csuzhang.info/about/self.png","link":"https://github.com/zhyChesterCheung","description":"A passionate & singlehood backend developer","socials":{"github":"https://github.com/zhyChesterCheung","twitter":"https://twitter.com/ChesterCheung4","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5689093900","zhihu":"https://www.zhihu.com/people/la-la-la-la-la-la-la-ji-9","csdn":"https://blog.csdn.net/weixin_44390145","juejin":"https://juejin.cn/user/1803630845901783","customs":{}}}},"next_post":{}}