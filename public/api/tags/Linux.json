{"name":"Linux","slug":"Linux","count":4,"postlist":[{"title":"Operating System 1","uid":"5ef8240d710597f2ae80c2594557b77a","slug":"2019-10-22-Operating-System-1","date":"2019-10-22T10:00:00.000Z","updated":"2021-10-07T09:59:33.616Z","comments":true,"path":"api/articles/2019-10-22-Operating-System-1.json","keywords":null,"cover":"http://csuzhang.info/photos/OS-1.png","text":"OS基本概念、系统调用、中断一、操作系统特征 并发：多个事件在同一时间间隔内同时发生，在宏观上是同时发生的，在微观上是交替发生的； 区分：并行（多个事件在同一时刻同时发生，同一时刻运行多个指令，需要硬件支持：比如多处理器） 共享：系统中的资源被多个并发的进程共同使用，分为互斥共享...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"OS","slug":"OS","count":5,"path":"api/categories/OS.json"}],"tags":[{"name":"OS","slug":"OS","count":7,"path":"api/tags/OS.json"},{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"}],"author":{"name":"Csuzhang","slug":"blog-author","avatar":"http://csuzhang.info/about/self.png","link":"https://github.com/zhyChesterCheung","description":"A passionate & singlehood backend developer","socials":{"github":"https://github.com/zhyChesterCheung","twitter":"https://twitter.com/ChesterCheung4","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5689093900","zhihu":"https://www.zhihu.com/people/la-la-la-la-la-la-la-ji-9","csdn":"https://blog.csdn.net/weixin_44390145","juejin":"https://juejin.cn/user/1803630845901783","customs":{}}}},{"title":"Operating System 2","uid":"d64204ea7010a8dff7ca1f949f9be51e","slug":"2019-10-23-Operating-System-2","date":"2019-10-23T10:00:00.000Z","updated":"2021-10-07T09:39:09.663Z","comments":true,"path":"api/articles/2019-10-23-Operating-System-2.json","keywords":null,"cover":"http://csuzhang.info/photos/OS-2.png","text":"一、进程的定义、组成、组织、特征进程的定义 进程是程序的一次执行过程 进程是具有独立功能的程序在数据集合上运行的过程，是系统进行调度和资源分配的独立单元 进程实体 = 程序段 + 数据段 + PCB(进程控制块) 注意区分：进程和进程实体：进程是动态的，进程实体是静态的 PCB(...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"OS","slug":"OS","count":5,"path":"api/categories/OS.json"}],"tags":[{"name":"OS","slug":"OS","count":7,"path":"api/tags/OS.json"},{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"}],"author":{"name":"Csuzhang","slug":"blog-author","avatar":"http://csuzhang.info/about/self.png","link":"https://github.com/zhyChesterCheung","description":"A passionate & singlehood backend developer","socials":{"github":"https://github.com/zhyChesterCheung","twitter":"https://twitter.com/ChesterCheung4","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5689093900","zhihu":"https://www.zhihu.com/people/la-la-la-la-la-la-la-ji-9","csdn":"https://blog.csdn.net/weixin_44390145","juejin":"https://juejin.cn/user/1803630845901783","customs":{}}}},{"title":"Operating System 3","uid":"5edc0af96d039407d0a4d714c8979137","slug":"2019-10-24-Operating-System-3","date":"2019-10-24T10:00:00.000Z","updated":"2021-10-07T09:39:29.271Z","comments":true,"path":"api/articles/2019-10-24-Operating-System-3.json","keywords":null,"cover":"http://csuzhang.info/photos/OS-8.png","text":"四、进程通信定义：进程之间的信息交换 进程是资源分配的最小单位，因此，各个进程的内存地址空间相互独立 通常来说，为了保证安全，一个进程不能直接访问另一个的地址空间 三种通信方式: 共享存储、 管道通信、消息传递 共享存储 设置一个共享空间，进程间互斥的进行访问； 分为： 基于数据...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"OS","slug":"OS","count":5,"path":"api/categories/OS.json"}],"tags":[{"name":"OS","slug":"OS","count":7,"path":"api/tags/OS.json"},{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"}],"author":{"name":"Csuzhang","slug":"blog-author","avatar":"http://csuzhang.info/about/self.png","link":"https://github.com/zhyChesterCheung","description":"A passionate & singlehood backend developer","socials":{"github":"https://github.com/zhyChesterCheung","twitter":"https://twitter.com/ChesterCheung4","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5689093900","zhihu":"https://www.zhihu.com/people/la-la-la-la-la-la-la-ji-9","csdn":"https://blog.csdn.net/weixin_44390145","juejin":"https://juejin.cn/user/1803630845901783","customs":{}}}},{"title":"深入浅出IO模型","uid":"96e9bdce81e3be8f3d9c5a142492ab30","slug":"2019-10-4-IO-stream","date":"2019-10-04T15:59:00.000Z","updated":"2021-10-07T12:31:58.977Z","comments":true,"path":"api/articles/2019-10-4-IO-stream.json","keywords":null,"cover":"http://csuzhang.info/photos/2019-10-4-1.jpg","text":"前言：每次谈到IO模型，都会牵扯到同步、异步、阻塞、非阻塞这几个词。从词的表面上看，很多人都觉得很容易理解。但是细细一想，却总会发现有点摸不着头脑。下文就结合具体的实例来讲解一下经典的几个IO模型。 IO模型分类：内存IO、磁盘IO、网络IO等，通常的IO指的是后两者 阻塞和非阻...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"OS","slug":"OS","count":5,"path":"api/categories/OS.json"}],"tags":[{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"},{"name":"OS :wq","slug":"OS-wq","count":1,"path":"api/tags/OS-wq.json"},{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"}],"author":{"name":"Csuzhang","slug":"blog-author","avatar":"http://csuzhang.info/about/self.png","link":"https://github.com/zhyChesterCheung","description":"A passionate & singlehood backend developer","socials":{"github":"https://github.com/zhyChesterCheung","twitter":"https://twitter.com/ChesterCheung4","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5689093900","zhihu":"https://www.zhihu.com/people/la-la-la-la-la-la-la-ji-9","csdn":"https://blog.csdn.net/weixin_44390145","juejin":"https://juejin.cn/user/1803630845901783","customs":{}}}}]}